<div class="contents">
<template id="sdtemplate">
<style>
.div  {
          background-color: cyan;
          position: absolute;
          top:0px;
          height: 5%;
          width: 100%;
  z-index: -10;
}
</style>
<div class="div"></div>
</template>
<template id="ctemplate">

<style>
.div  {
                    background-color: cyan;
          position: absolute;
          top:6px;
          height: 50%;
          width: 50%;
}
</style>


</template>

<script src="http://ajax.googleapis.com/ajax/libs/jquery/1.11.2/jquery.min.js"></script>
<script>
 (function($) {

   // This variable is available only inside this plugin
   var text = "Hello World";

    $.fn.helloWorld = function(options) {

        // Plugin options default values
        var settings = $.extend({
            color: "white",
            fontStyle: "Roboto",
        }, options );

        return this.each( function() {
            $(this).text(text);
            $(this).css("color", settings.color);
            $(this).css("font-style", settings.fontStyle);
        });

    }

}(jQuery)); 
</script>
<script>
$(document).ready(function(){
$("clock-digital").helloWorld();
});
</script>

<x-foo-from-template>
<clock-digital id="clock">
</clock-digital>


        <p id="level"></p>

</x-foo-from-template>
<div class="power bounceOut animated"><div class="power_cover"></div><iron-a11y-keys target="{{}}" keys="up down left right" on-keys-pressed="myFunction()"></iron-a11y-keys>
<div class="power_menu"><ul>
            <ul class="ul1">
              <li>

                <paper-button  class="Button" id="power_off" type="submit">
<p class="power_off command">sudo init 0</p>
                  <div class="Button1">
                    <ng-md-icon icon="settings_power" style="fill: #2196f3" size="25"></ng-md-icon>Power off</div>
                </paper-button>
</li>
                <li>
                  <paper-button class="Button" id="reboot" name="reboot">
<p class="reboot command">shutdown -r</p>
                    <div class="Button1">
                      <ng-md-icon icon="refresh" style="fill: orange" size="25"></ng-md-icon>Reboot</div>
                  </paper-button>
</li>
<li>
                  <paper-button class="Button" id="sleep" value="start notepad"> 
<p class="sleep command">gnome-session-quit</p>
                    <div class="Button1">
                      <ng-md-icon icon="snooze" style="fill: grey" size="25"></ng-md-icon>Log out</div>
                  </paper-button>
                </li>
            </ul></div>
</div>
<iframe id="frame-id" src="https://localhost/home.html">
</iframe>
    <script>
      var numberUpdates = 0;
      var battery;

      function batterySuccess(batteryManager) {
        battery = batteryManager;
        document.getElementById("promiseStatus").innerHTML = "success";
        updateBatteryInformation();
        battery.addEventListener('chargingchange', updateBatteryInformation);
        battery.addEventListener('chargingtimechange', updateBatteryInformation);
        battery.addEventListener('dischargingtimechange', updateBatteryInformation);
        battery.addEventListener('levelchange', updateBatteryInformation);
      }

      function batteryFailure() {
        document.getElementById("promiseStatus").innerHTML = "failed";
      }

      function ConvertToHMS(durationInSeconds) {
        if (!isFinite(durationInSeconds)) return "";
        var hours = Math.floor(durationInSeconds / 3600);
        var seconds = durationInSeconds % 60;
        var minutes = Math.floor((durationInSeconds - hours * 3600 - seconds) / 60);
        return " (" + hours + "h:" + minutes + "m:" + seconds + "s)";
      }

      function updateBatteryInformation() {
        document.getElementById("charging").innerHTML = battery.charging;
        document.getElementById("chargingTime").innerHTML = battery.chargingTime + ConvertToHMS(battery.chargingTime);
        document.getElementById("dischargingTime").innerHTML = battery.dischargingTime + ConvertToHMS(battery.dischargingTime);
        document.getElementById("level").innerHTML = battery.level;
        numberUpdates++;
        document.getElementById("numberUpdates").innerHTML = numberUpdates;
      }

      document.getElementById("promiseStatus").innerHTML = "pending";
      document.getElementById("numberUpdates").innerHTML = numberUpdates;
      navigator.getBattery().then(batterySuccess, batteryFailure);
    </script>


<script type="text/javascript">




function my() {
var listener = new window.keypress.Listener();
listener.simple_combo("shift s", function() {
    console.log("You pressed shift and s");
$('.power').toggleClass('bounceIn bounceOut');
});
}
</script>

<script>

$(document).ready(function(){
    $('paper-button').click(function(){
  var htmlString = $("."+ event.currentTarget.id + "").html();
  $.ajax({
  method: "POST",
  url: "backend/ajax.php",
  data: { dataString: htmlString}
})
  .done(function( msg ) {
    alert( "Data Saved: " + msg );
  });
    });

});
</script>
<script>
if (annyang) {
  // Let's define our first command. First the text we expect, and then the function it should call
  var commands = {
    'shutdown': function() {
  var htmlString = sudo init 0;
  $.ajax({
  method: "POST",
  url: "backend/ajax.php",
  data: { dataString: htmlString}
})
  .done(function( msg ) {
    alert( "Data Saved: " + msg );
  });
    }
  };

  // Add our commands to annyang
  annyang.addCommands(commands);

  // Start listening. You can call this here, or attach this call to an event, button, etc.
  annyang.start();
}
</script>
</div>
